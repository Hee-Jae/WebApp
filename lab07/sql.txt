CREATE TABLE student(
    student_id INT NOT NULL PRIMARY KEY,
    name VARCHAR(10) NOT NULL,
    year TINYINT NOT NULL DEFAULT 1,
    dept_no INT NOT NULL,
    major VARCHAR(20) NULL
);

CREATE TABLE department(
    dept_no INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    dept_name VARCHAR(20) NOT NULL UNIQUE,
    office VARCHAR(20) NOT NULL,
    office_tel VARCHAR(13) NULL
);

ALTER TABLE student MODIFY major VARCHAR(30);
ALTER TABLE student ADD COLUMN gender VARCHAR(6) NOT NULL;
ALTER TABLE student DROP COLUMN gender;
ALTER TABLE student MODIFY name VARCHAR(20);
ALTER TABLE student MODIFY major VARCHAR(40);

INSERT INTO student VALUES 
(20070002, 'Jane Smith', 3, 4, 'Business Administration'),
(20060001, 'Ashley Jackson', 4, 4, 'Business Administration'),
(20030001, 'Liam Johnson', 4, 2, 'Electrical Engineering'),
(20040003, 'Jacob Lee', 3, 2, 'Electrical Engineering'),
(20060002, 'Noah Kim', 3, 1, 'Computer Science'),
(20100002, 'Ava Lim', 3, 4, 'Business Administration'),
(20110001, 'Emma Watson', 2, 1, 'Computer Science'),
(20080003, 'Lisa Maria', 4, 3, 'Law'),
(20040002, 'Jacob William', 4, 5, 'Law'),
(20070001, 'Emily Rose', 4, 4, 'Business Administration'),
(20100001, 'Ethan Hunt', 3, 4, 'Business Administration'),
(20110002, 'Jason Mraz', 2, 1, 'Electrical Engineering'),
(20030002, 'John Smith', 5, 1, 'Computer Science'),
(20070003, 'Sophia Park', 4, 3, 'Law'),
(20070007, 'James Michael', 2, 4, 'Business Administration'),
(20100003, 'James Bond', 3, 1, 'Computer Science'),
(20070005, 'Olivia Madison', 2, 5, 'English Language and Literature');

ALTER TABLE department MODIFY dept_name VARCHAR(40);
ALTER TABLE department MODIFY office VARCHAR(30);

INSERT INTO department(dept_name, office, office_tel) VALUES
('Computer Science', 'Science Building 101', '02-3290-0123'),
('Electrical Engineering', 'Engineering Building 401', '02-3290-2345'),
('Law', 'Law Building 201', '02-3290-7896'),
('Business Administration', 'Business Building 104', '02-3290-1112'),
('English Language and Literature', 'Language Building 303', '02-3290-4412');

UPDATE department SET dept_name = "Electrical and Electronics Engineering" WHERE dept_no=2;

INSERT INTO department(dept_name, office, office_tel) VALUES
('Special Education', 'Education Building 403', '02-3290-2347');

UPDATE student SET dept_no=6, major='Special Education' WHERE name='Emma Watson';
DELETE FROM student WHERE name='Jason Mraz';
DELETE FROM student WHERE name='John Smith';

SELECT * FROM student WHERE major = 'Computer Science';
SELECT student_id, year, major FROM student;
SELECT * FROM student WHERE year=3;
SELECT * FROM student WHERE year=1 OR year=2;
SELECT * FROM student WHERE dept_no=(SELECT dept_no FROM department WHERE dept_no=4);

SELECT * FROM student WHERE student_id LIKE "%2007%";
SELECT * FROM student ORDER BY student_id;
SELECT major FROM student GROUP BY major HAVING avg(year) >= 3;
SELECT * FROM student WHERE major='Business Administration' AND student_id LIKE "%2007%" LIMIT 2;

SELECT * FROM roles WHERE movie_id = (SELECT id FROM movies WHERE name="Pi");
SELECT first_name, last_name FROM actors JOIN roles ON actors.id = actor_id JOIN movies ON movie_id = movies.id WHERE name="Pi";

SELECT first_name, last_name FROM actors
WHERE id IN
(SELECT actor_id FROM roles, movies
WHERE movie_id = id AND name = 'Kill Bill: Vol. 1')
AND id IN (SELECT actor_id FROM roles, movies
WHERE movie_id = id AND name = 'Kill Bill: Vol. 2');

SELECT first_name, last_name, count(movie_id)
FROM actors, roles
WHERE id = actor_id
GROUP BY actor_id
ORDER BY count(movie_id) DESC LIMIT 7;

SELECT genre 
FROM movies_genres
GROUP BY genre
ORDER BY count(movie_id) DESC LIMIT 3;

SELECT first_name, last_name
FROM directors, movies_directors D, movies_genres G
WHERE id = D.director_id AND D.movie_id = G.movie_id AND genre = 'Thriller'
GROUP BY director_id
ORDER BY count(director_id) DESC LIMIT 1;

SELECT grade
FROM grades, courses
WHERE id = course_id AND name = 'Computer Science 143';

SELECT name, grade
FROM students, grades
WHERE (grade LIKE 'A%' OR grade LIKE 'B%') AND id = student_id
AND course_id IN (SELECT id FROM courses
WHERE name = 'Computer Science 143');

SELECT S.name, C.name, grade
FROM students S, courses C, grades
WHERE (grade LIKE 'A%' OR grade LIKE 'B%')
AND S.id = student_id AND C.id = course_id;

SELECT name
FROM courses, grades
WHERE id = course_id
GROUP BY course_id
HAVING count(student_id) >= 2;
